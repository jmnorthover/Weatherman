{"version":3,"sources":["Components/Home.js","Components/Forecast.js","Services/api/getWeather.js","Components/WeatherDisplay.js","App.js","index.js"],"names":["Home","setZipCode","useState","zipInput","setZipInput","zipPattern","className","class","onSubmit","e","preventDefault","test","type","placeholder","required","value","onChange","target","Forecast","data","icon","weather","format","Date","dt","src","alt","description","Math","round","main","temp","getWeather","zip","a","url","fetch","response","json","WeatherDisplay","zipCode","currentWeather","setCurrentWeather","forecast","setForecast","fetchFailed","setFetchFailed","useEffect","then","res","catch","error","onClick","name","feels_like","humidity","wind","speed","map","time","key","App","ReactDOM","render","document","getElementById"],"mappings":"mKAkCeA,EAhCF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACCC,mBAAS,IADV,mBACxBC,EADwB,KACdC,EADc,KAGzBC,EAAa,UAUnB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,kBACb,wBAAIC,MAAM,QAAV,cACA,wBAAIA,MAAM,cAAV,uBACA,0BAAMC,SAbS,SAACC,GACpBA,EAAEC,iBAEEL,EAAWM,KAAKR,IAClBF,EAAWE,KAUP,2BACES,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRC,MAAOZ,EACPa,SAAU,SAACP,GAAD,OAAOL,EAAYK,EAAEQ,OAAOF,c,QCNnCG,EAjBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAOD,EAAKE,QAAQ,GAAGD,KAE7B,OACE,yBAAKd,UAAU,iBACb,6BAAMgB,YAAO,IAAIC,KAAe,IAAVJ,EAAKK,IAAY,MACvC,6BACE,yBACEC,IAAG,4CAAuCL,EAAvC,WACHM,IAAKP,EAAKE,QAAQ,GAAGM,eAGzB,yBAAKrB,UAAU,iBAAiBsB,KAAKC,MAAMV,EAAKW,KAAKC,MAArD,U,uBCTSC,EANC,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACXC,EADW,uBACWF,GADX,SAEMG,MAAMD,GAFZ,cAEXE,EAFW,gBAGJA,EAASC,OAHL,mFAAH,sDC4DDC,EAxDQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASvC,EAAiB,EAAjBA,WAAiB,EACNC,mBAAS,MADH,mBAC3CuC,EAD2C,KAC3BC,EAD2B,OAElBxC,mBAAS,MAFS,mBAE3CyC,EAF2C,KAEjCC,EAFiC,OAGZ1C,oBAAS,GAHG,mBAG3C2C,EAH2C,KAG9BC,EAH8B,KAgBlD,OAXAC,qBAAU,WACRf,EAAWQ,GACRQ,MAAK,SAACC,GACLP,EAAkBO,EAAIR,gBACtBG,EAAYK,EAAIN,aAEjBO,OAAM,SAACC,GACNL,GAAe,QAElB,CAACN,IAEAC,GAAkBE,EAElB,yBAAKrC,UAAU,mBACb,yBAAKA,UAAU,SAAS8C,QAAS,kBAAMnD,EAAW,MAAlD,mBAGA,yBAAKK,UAAU,YAAYmC,EAAeY,MAC1C,wBAAI/C,UAAU,gBACXmC,EAAepB,QAAQ,GAAGM,aAE7B,yBAAKrB,UAAU,QAAQsB,KAAKC,MAAMY,EAAeX,KAAKC,MAAtD,QACA,yBAAKzB,UAAU,YACb,4CACesB,KAAKC,MAAMY,EAAeX,KAAKwB,YAD9C,QAGA,0CAAgBb,EAAeX,KAAKyB,SAApC,KACA,sCAAY3B,KAAKC,MAAMY,EAAee,KAAKC,OAA3C,SAEF,yBAAKnD,UAAU,YACZqC,EAASe,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAAUxC,KAAMwC,EAAMC,IAAKD,EAAKnC,UAK/BqB,EAEP,yBAAKvC,UAAU,mBACb,6DACA,wDACA,yBAAKA,UAAU,aAAa8C,QAAS,kBAAMnD,EAAW,MAAtD,eAMG,ICvCI4D,EAbH,WAAO,IAAD,EACc3D,mBAAS,IADvB,mBACTsC,EADS,KACAvC,EADA,KAEhB,OACE,yBAAKK,UAAU,aACXkC,EAGA,kBAAC,EAAD,CAAgBA,QAASA,EAASvC,WAAYA,IAF9C,kBAAC,EAAD,CAAMA,WAAYA,MCL1B6D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d5624a3c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Home = ({ setZipCode }) => {\r\n  const [zipInput, setZipInput] = useState('');\r\n\r\n  const zipPattern = /^\\d{5}$/;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (zipPattern.test(zipInput)) {\r\n      setZipCode(zipInput);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"splash\">\r\n      <div className=\"splash-content\">\r\n        <h1 class=\"logo\">WEATHERMAN</h1>\r\n        <h2 class=\"zip_prompt\">Enter your zipcode:</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"55555\"\r\n            required\r\n            value={zipInput}\r\n            onChange={(e) => setZipInput(e.target.value)}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { format } from 'date-fns';\r\n\r\nconst Forecast = ({ data }) => {\r\n  const icon = data.weather[0].icon;\r\n\r\n  return (\r\n    <div className=\"forecast-card\">\r\n      <div>{format(new Date(data.dt * 1000), 'p')}</div>\r\n      <div>\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          alt={data.weather[0].description}\r\n        />\r\n      </div>\r\n      <div className=\"forecast-temp\">{Math.round(data.main.temp)}&deg;</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","const getWeather = async (zip) => {\r\n  const url = `/api/weather/${zip}`;\r\n  const response = await fetch(url);\r\n  return await response.json();\r\n};\r\n\r\nexport default getWeather;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Forecast from './Forecast';\r\nimport getWeather from '../Services/api/getWeather';\r\n\r\nconst WeatherDisplay = ({ zipCode, setZipCode }) => {\r\n  const [currentWeather, setCurrentWeather] = useState(null);\r\n  const [forecast, setForecast] = useState(null);\r\n  const [fetchFailed, setFetchFailed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getWeather(zipCode)\r\n      .then((res) => {\r\n        setCurrentWeather(res.currentWeather);\r\n        setForecast(res.forecast);\r\n      })\r\n      .catch((error) => {\r\n        setFetchFailed(true);\r\n      });\r\n  }, [zipCode]);\r\n\r\n  if (currentWeather && forecast) {\r\n    return (\r\n      <div className=\"weather-display\">\r\n        <div className=\"change\" onClick={() => setZipCode('')}>\r\n          Change Location\r\n        </div>\r\n        <div className=\"location\">{currentWeather.name}</div>\r\n        <h2 className=\"weather-desc\">\r\n          {currentWeather.weather[0].description}\r\n        </h2>\r\n        <div className=\"temp\">{Math.round(currentWeather.main.temp)}&deg;</div>\r\n        <div className=\"sub-info\">\r\n          <div>\r\n            Feels like: {Math.round(currentWeather.main.feels_like)}&deg;\r\n          </div>\r\n          <div>Humidity: {currentWeather.main.humidity}%</div>\r\n          <div>Wind: {Math.round(currentWeather.wind.speed)} mph</div>\r\n        </div>\r\n        <div className=\"forecast\">\r\n          {forecast.map((time) => (\r\n            <Forecast data={time} key={time.dt} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (fetchFailed) {\r\n    return (\r\n      <div className=\"weather-display\">\r\n        <h2>Failed to fetch weather data.</h2>\r\n        <h2>Zip code may be invalid.</h2>\r\n        <div className=\"failed-zip\" onClick={() => setZipCode('')}>\r\n          Change Zip\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport default WeatherDisplay;\r\n","import React, { useState } from 'react';\nimport Home from './Components/Home';\nimport WeatherDisplay from './Components/WeatherDisplay';\n\nconst App = () => {\n  const [zipCode, setZipCode] = useState('');\n  return (\n    <div className=\"container\">\n      {!zipCode ? (\n        <Home setZipCode={setZipCode} />\n      ) : (\n        <WeatherDisplay zipCode={zipCode} setZipCode={setZipCode} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}